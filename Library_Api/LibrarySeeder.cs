using AutoMapper;
using Library_Api.Entity;
using Microsoft.EntityFrameworkCore;

namespace Library_Api
{
    public class LibrarySeeder
    {
        private readonly LibraryDbContext _dbContext;
        private List<Tag> _tags;

        public LibrarySeeder(LibraryDbContext dbContext)
        {
            _dbContext = dbContext;
        }

        public void Seed()
        {
            if (_dbContext.Database.CanConnect()&&_dbContext.Database.IsRelational())
            {
                var pendingMigrations = _dbContext.Database.GetPendingMigrations();
                if (pendingMigrations != null && pendingMigrations.Any())
                {
                    _dbContext.Database.Migrate();
                }
                if (!_dbContext.Roles.Any())
                {
                    var roles = GetRoles();
                    _dbContext.Roles.AddRange(roles);
                    _dbContext.SaveChanges();
                }
                //sample books and tags generated by chat GPT to present api features
                _tags = GetTags();
                if (!_dbContext.Tags.Any())
                {
                    _dbContext.Tags.AddRange(_tags);
                    _dbContext.SaveChanges();
                }

                if (!_dbContext.Books.Any())
                {
                    var books = GetBooks();
                    _dbContext.Books.AddRange(books);
                    _dbContext.SaveChanges();
                }
            }
        }

        private IEnumerable<Role> GetRoles()
        {
            var roles = new List<Role>()
            {
                new Role()
                {
                    Name = "User"
                },
                new Role()
                {
                Name = "Librarian"
                },
                new Role()
                {
                    Name = "Admin"
                },
            };
            return roles;
        }

        private IEnumerable<Book> GetBooks()
        {
            var books = new List<Book>()
            {
                new Book()
                {
                    Tittle="To Kill a Mockingbird",
                    Author="Harper Lee",
                    PublishDate=new DateTime(1960,1,1),
                    Tags=_tags
                    .Take(3)
                    .ToList()
                }, new Book()
                {
                    Tittle="Pride and Prejudice",
                    Author="Jane Austen",
                    PublishDate=new DateTime(1813,1,1),
                    Tags=_tags
                    .Skip(3)
                    .Take(3)
                    .ToList()
                }, new Book()
                {
                    Tittle="The Great Gatsby",
                    Author="Scott Fitzgerald",
                    PublishDate=new DateTime(1925,1,1),
                    Tags=_tags
                    .Skip(6)
                    .Take(3)
                    .ToList()
                }, new Book()
                {
                    Tittle="1984",
                    Author="George Orwell",
                    PublishDate=new DateTime(1949,1,1),
                    Tags=_tags
                    .Skip(9)
                    .Take(3)
                    .ToList()
                }, new Book()
                {
                    Tittle="One Hundred Years of Solitude",
                    Author="Gabriel Garcia Marquez",
                    PublishDate=new DateTime(1967,1,1),
                    Tags=_tags
                    .Skip(12)
                    .Take(3)
                    .ToList()
                }, new Book()
                {
                    Tittle="Moby-Dick",
                    Author="Herman Melville",
                    PublishDate=new DateTime(1851,1,1),
                    Tags=_tags
                    .Skip(15)
                    .Take(2)
                    .ToList(),
                   

                }, new Book()
                {
                    Tittle="The Diary of a Young Girl",
                    Author="Anne Frank",
                    PublishDate=new DateTime(1947,1,1),
                    Tags=_tags
                    .Skip(17)
                    .Take(3)
                    .ToList()
                }, new Book()
                {
                    Tittle="The Catcher in the Rye",
                    Author="J.D. Salinger",
                    PublishDate=new DateTime(1951,1,1),
                    Tags=_tags
                    .Skip(20)
                    .Take(3)
                    .ToList()
                }, new Book()
                {
                    Tittle="The Lord of the Rings",
                    Author="J.R.R. Tolkien",
                    PublishDate=new DateTime(1955,1,1),
                    Tags=_tags
                    .Skip(23)
                    .Take(3)
                    .ToList()
                }, new Book()
                {
                    Tittle="The Adventures of Huckleberry Finn",
                    Author="Jane Austen",
                    PublishDate=new DateTime(1813,1,1),
                    Tags=_tags
                    .Skip(15)
                    .Take(1)
                    .Skip(10)
                    .Take(2)
                    .ToList()
                }
            };
            return books;
        }

        private List<Tag> GetTags()
        {
            var tags = new List<Tag>()
            {
                new Tag()
                {
                    Name="Fiction"
                },
                new Tag()
                {
                    Name="Race relations"
                },
                new Tag()
                {
                    Name="Southern literature"
                },
                new Tag()
                {
                    Name="Romance"
                },new Tag()
                {
                    Name="Regency era"
                },new Tag()
                {
                    Name="Classic literature"
                },new Tag()
                {
                    Name="Jazz Age"
                },
                new Tag()
                {
                    Name="The American Dream"
                },new Tag()
                {
                    Name="Social critique"
                },new Tag()
                {
                    Name="Dystopian fiction"
                },new Tag()
                {
                    Name="Political satire"
                },new Tag()
                {
                    Name="Totalitarianism"
                },new Tag()
                {
                    Name="Magical realism"
                },new Tag()
                {
                    Name="Colombian literature"
                },new Tag()
                {
                    Name="Family saga"
                },new Tag()
                {
                    Name="American literature"
                },new Tag()
                {
                    Name="Whaling industry"
                },new Tag()
                {
                    Name="Holocaust"
                },new Tag()
                {
                    Name="World War II"
                },new Tag()
                {
                    Name="Jewish history"
                },new Tag()
                {
                    Name="Coming of age"
                },new Tag()
                {
                    Name="Absurdism"
                },new Tag()
                {
                    Name="Teenage rebellion"
                },
                new Tag()
                {
                    Name="Fantasy"
                },new Tag()
                {
                    Name="High fantasy"
                },
                new Tag()
                {
                    Name="Epic literature"
                },new Tag()
                {
                    Name="Adventure"
                },new Tag()
                {
                    Name="Slavery and racism"
                }
            };
            return tags;
        }
    }
}